name: CI and Allure Report Workflow

env:
  PRIMARY_PYTHON_VERSION: "3.12"
  PRIMARY_PLATFORM: "ubuntu-latest"
  PYTEST_CMD: >-
    python -m pytest 
    --junitxml=pytest.xml 
    --cov-report=term-missing:skip-covered 
    --cov=src 
    tests/

on:
  # push:
  #   branches: [ master, main ]
  # pull_request:
  #   branches: [ master, main ]
  workflow_dispatch:

# permissions:
#   pull-requests: write
#   contents: write

jobs:
  matrix-build:
    strategy:
      matrix:
        python-version: [ "3.12" ]
        platform: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r dev-requirements.txt

      - name: Run tests with coverage
        run: ${{ env.PYTEST_CMD }}

  primary-build:
    runs-on: ubuntu-latest
    concurrency:
      group: github-pages
      cancel-in-progress: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PRIMARY_PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PRIMARY_PYTHON_VERSION }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ env.PRIMARY_PYTHON_VERSION }}-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ env.PRIMARY_PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r dev-requirements.txt

      - name: Run tests with Allure results and coverage
        run: |
          pytest --alluredir=allure-results ${{ env.PYTEST_CMD }}

      - name: Load Allure report history from gh-pages
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages-dir

      - name: Generate Allure Report
        uses: andgineer/allure-report@v3.5
        id: allure-report
        with:
          allure-results: allure-results
          website: gh-pages-dir
          reports-site-path: builds/tests
          report-page: behaviors

      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: always() && (steps.allure-report.outcome == 'success')
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ${{ steps.allure-report.outputs.reports-site }}
          destination_dir: ${{ steps.allure-report.outputs.reports-site-path }}

      - name: Post coverage comment on PR
        id: coverage_comment
        if: always()
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MINIMUM_GREEN: 85
          MINIMUM_ORANGE: 70

      - name: Upload PR coverage comment artifact
        uses: actions/upload-artifact@v4
        if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
        with:
          name: python-coverage-comment-action
          path: python-coverage-comment-action.txt
